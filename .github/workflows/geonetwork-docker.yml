name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Checking out"
      uses: actions/checkout@v1

    - name: "Checking out submodules"
      uses: textbook/git-checkout-submodule-action@2.0.0

    - name: Setting up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: "Configuring Maven"
      run: |
          mkdir -p $HOME/.m2
          echo $M2_SETTINGS_FILE > $HOME/.m2/settings.xml
      env:
          M2_SETTINGS_FILE: ${{ secrets.M2_SETTINGS_FILE }}

    - name: "Installing"
      run: mvn clean install -DskipTests

#    #SaveTheEarth
#    - name: "Running tests"
#      run: mvn clean install

    - name: Getting image tag
      id: version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: "Building docker image"
      working-directory: web/
      run: mvn clean package docker:build -Pdocker -DdockerImageName=georchestra/geonetwork:${{ steps.version.outputs.VERSION }} -DskipTests

    - name: "Logging in docker.io"
      uses: azure/docker-login@v1
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "Pushing latest to docker.io"
      if: contains(github.ref, '-master')
      run: |
        docker tag georchestra/geonetwork:${{ steps.version.outputs.VERSION }} georchestra/geonetwork:latest
        docker push georchestra/geonetwork:latest

    - name: "Pushing release branch to docker.io"
      if: contains(github.ref, '-20.0')
      run: |
        docker tag georchestra/geonetwork:${{ steps.version.outputs.VERSION }} georchestra/geonetwork:20.0.x
        docker push georchestra/geonetwork:20.0.x

    - name: "Pushing release tag to docker.io"
      if: contains(github.ref, 'refs/tags/20.')
      run: |
        docker push georchestra/geonetwork:${{ steps.version.outputs.VERSION }}
