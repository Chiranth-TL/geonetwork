name: Linux GitHub CI

on: [pull_request,push,workflow_dispatch]

env:
  MAVEN_OPTS: -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Xmx512m -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss,SSS
  TAKARI_SMART_BUILDER_VERSION: 0.6.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            jdk: 8
    steps:
    - uses: actions/checkout@v2
      with:
        # 500 commits, set to 0 to get all
        fetch-depth: 500
        submodules: 'recursive'
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.jdk }}
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - name: Maven repository caching
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B -V install -DskipTests=true -Dmaven.javadoc.skip=true

    # geOrchestra specific
    - name: Build a docker image
      run: mvn -B -V package docker:build -Pdocker -pl web

    - name: publish the artifact
      if: github.repository == 'georchestra/geonetwork' && github.ref == 'refs/heads/georchestra-gn4-4.x-dev'
      uses: actions/upload-artifact@v1
      with:
        name: geonetwork.war
        path: web/target/geonetwork.war

    - uses: docker/login-action@v1
      if: github.repository == 'georchestra/geonetwork' && github.ref == 'refs/heads/georchestra-gn4-4.x-dev'
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    # TODO: this will break next time a version is released and we update with upstream
    # because the closest tag won't be 4.0.5 anymore
    - name: Publish the docker image
      if: github.repository == 'georchestra/geonetwork' && github.ref == 'refs/heads/georchestra-gn4-4.x-dev'
      run: |
        docker push georchestra/geonetwork:4.0.5-dev

    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
    - name: Remove Schema 3.8 jars from repository
      run: |
        find ~/.m2/repository -name "*3.8*" -type d | xargs rm -rf {}

  QA:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        # 500 commits, set to 0 to get all
        fetch-depth: 500
        submodules: 'recursive'
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - name: Maven repository caching
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Test with maven
      run: mvn -B -V -fae install
    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
    - name: Remove Schema 3.8 jars from repository
      run: |
        find ~/.m2/repository -name "*3.8*" -type d | xargs rm -rf {}
